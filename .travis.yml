language: android
#JDK
jdk: oraclejdk8
sudo: required

notifications:
  email:
    recipients:
      - lhysaara@gmail.com
      - aud.stephan@gmail.com
      - camleuregans@gmail.com
      - coralinebouri@gmail.com
    on_success: change
    on_failure: change

env:
  matrix:
    - ANDROID_TARGET1=android-18 ANDROID_ABI1=armeabi-v7a
    - ANDROID_TARGET2=android-24 ANDROID_ABI1=armeabi-v7a
  global:
    - ADB_INSTALL_TIMEOUT=8    #Time out to 8 mins

before_cache:
    - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock

cache:
  directories:      #Cache all dirs under .gradle folder
    - $HOME/.gradle/daemon      #Cache daemon logs
    - $HOME/.gradle/native      #Cache library downloaded from the gradle dependency
    - $HOME/.gradle/wrapper     #Cache the gradle

android:
    update_sdk: true  #Check for the updates each time you run the build
    components:
        - platform-tools
        - tools
        - build-tools-25.0.0
        - android-24

        # Additional components
        - extra-google-google_play_services
        - extra-google-m2repository
        - extra-android-m2repository
        - addon-google_apis-google-19   # google play services

        #system images for emulator
        - sys-img-armeabi-v7a-android-18
        - sys-img-armeabi-v7a-android-24

licenses:
    - 'android-sdk-preview-license-.+'
    - 'android-sdk-preview-license'
    - 'android-sdk-license-.+'
    - 'android-sdk-license'
    - 'google-gdk-license-.+'

before_script:
   - chmod +x gradlew      #Grant permissions
   - android list targets
#  - adb shell input keyevent 82 &

script:
# Create two emulator avds.
  - echo no | android create avd --force -n test1 -t ${ANDROID_TARGET1} --abi ${ANDROID_ABI1}
  - echo no | android create avd --force -n test2 -t ${ANDROID_TARGET2} --abi ${ANDROID_ABI1}

    # Start the first emulator.
  - emulator -avd test1 -no-skin -no-audio -no-window &
    # Wait for the second emulator to start.
  - sh scripts/wait-for-first-emulator.sh

    # Just to check whether the device is seen by ADB.
  - "adb devices"

    # Start the second emulator.
  - emulator -avd test2 -no-skin -no-audio -no-window &
    # Wait for the second emulator to start.
  - sh scripts/wait-for-second-emulator.sh

    # Just to check whether the device is seen by ADB.
  - "adb devices"

    # Unlock the emulators.
  - adb -s emulator-5554 shell input keyevent 82
  - adb -s emulator-5556 shell input keyevent 82

  - ./gradlew clean build connectedAndroidTest -PdisablePreDex --stacktrace

before_install:
    - bash .travis-android-license-bugfix.sh

after_failure: "cat $TRAVIS_BUILD_DIR/app/build/outputs/lint-results-debug.xml"

after_success:
  - ./gradlew jacocoFullReport
  - pip install --user codecov
  - codecov
on:
  branch: dev
